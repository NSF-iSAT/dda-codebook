"use strict";(self.webpackChunkdda_codebook=self.webpackChunkdda_codebook||[]).push([[5367],{5276:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"Discourse Relations/Contingency/NegativeCondition/index","title":"Negative-Condition","description":"Definition","source":"@site/docs/Discourse Relations/Contingency/NegativeCondition/index.mdx","sourceDirName":"Discourse Relations/Contingency/NegativeCondition","slug":"/Discourse Relations/Contingency/NegativeCondition/","permalink":"/dda-codebook/Discourse Relations/Contingency/NegativeCondition/","draft":false,"unlisted":false,"editUrl":"https://github.com/NSF-iSAT/dda-codebook/tree/main/docs/Discourse Relations/Contingency/NegativeCondition/index.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Negative-Condition","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"ConditionedBy","permalink":"/dda-codebook/Discourse Relations/Contingency/Condition/conditionedby"},"next":{"title":"Negative-Conditioning","permalink":"/dda-codebook/Discourse Relations/Contingency/NegativeCondition/negativeconditioning"}}');var t=i(4848),s=i(8453);const d={title:"Negative-Condition",sidebar_position:3},r=void 0,a={},c=[{value:"Definition",id:"definition",level:2},{value:"Examples",id:"examples",level:3},{value:"Subtypes",id:"subtypes",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Used when:"})," one argument (the antecedent) describes a situation presented as unrealized, which if it ",(0,t.jsx)(n.strong,{children:"does not"})," occur, would lead to the situation described by the other argument (the consequent).\nThere are distinct senses for interpreting the arguments in terms of semantics or speech acts, with the default being semantics."]}),"\n",(0,t.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"(1) A: You want to avoid the slack\n(2) A: Otherwise it will slip off the wheel\n---\n(2) -- Negative-ConditionedBy --\x3e (1)\n"})}),"\n",(0,t.jsx)(n.p,{children:"If you do not (avoid the slack), it will slip off the wheel."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"<in a collaborative board game: Forbidden Island>\n\n(162) Messenger: We need to shore up Temple of the Moon before we lose it.\n---\n(162) --  Negative-ConditionedBy --\x3e (162)\n"})}),"\n",(0,t.jsx)(n.p,{children:"If we do not (shore up Temple of the Moon), we will lose it."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"(55) Teacher: For this there's really no right or wrong\n(56) Teacher: unless you're not doing anything.\n---\n(56) -- Negative-Conditioning --\x3e (55)\n"})}),"\n",(0,t.jsx)(n.p,{children:"If you are not (not doing anything), then there is no right or wrong."}),"\n",(0,t.jsx)(n.h3,{id:"subtypes",children:"Subtypes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/dda-codebook/Discourse%20Relations/Contingency/NegativeCondition/negativeconditioning",children:"Negative-Conditioning"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/dda-codebook/Discourse%20Relations/Contingency/NegativeCondition/negativeconditionedby",children:"Negative-ConditionedBy"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>r});var o=i(6540);const t={},s=o.createContext(t);function d(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);