"use strict";(self.webpackChunkdda_codebook=self.webpackChunkdda_codebook||[]).push([[2595],{6171:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"Dialogue Acts/Backward Communicative Functions/Reject/index","title":"Reject","description":"Definition","source":"@site/docs/Dialogue Acts/Backward Communicative Functions/Reject/index.mdx","sourceDirName":"Dialogue Acts/Backward Communicative Functions/Reject","slug":"/Dialogue Acts/Backward Communicative Functions/Reject/","permalink":"/dda-codebook/Dialogue Acts/Backward Communicative Functions/Reject/","draft":false,"unlisted":false,"editUrl":"https://github.com/NSF-iSAT/dda-codebook/tree/main/docs/Dialogue Acts/Backward Communicative Functions/Reject/index.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Reject","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Downplayer","permalink":"/dda-codebook/Dialogue Acts/Backward Communicative Functions/Downplayer/"},"next":{"title":"Signal Non Understanding","permalink":"/dda-codebook/Dialogue Acts/Backward Communicative Functions/Signal-non-understanding/"}}');var i=t(4848),s=t(8453);const a={title:"Reject",sidebar_position:1},r=void 0,c={},d=[{value:"Definition",id:"definition",level:2},{value:"Examples",id:"examples",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Used when:"})," the source argument indicates disagreement (full or partial) with some  previous proposal, plan, opinion, or statement in the target argument.\nIf a yes/no question is confirmational and can be interpreted as a tentative statement, plan, opinion, or proposal, then a \u201cno\u201d response should be labeled with the Reject dialogue act."]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"<counting>\n\n(1) A: Two fifty.\n(2) B: No three hundred, three hundred.\n---\n(2) --\x3e Reject --\x3e (1)\n"})}),"\n",(0,i.jsx)(n.p,{children:"B disagrees with A's statement about the total count."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"<in a collaborative board game: Forbidden Island>\n\n(18) Pilot: I don't think you have to do that, cause you didn't get Water rises.\n(19) Messenger: No you still have to\n---\n(19) -- Reject --\x3e (18)\n"})}),"\n",(0,i.jsx)(n.p,{children:"In (19), the Messenger is rejecting the Pilot's statement in (18) about the rules of the game."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"<in a collaborative board game: Forbidden Island>\n\n(368) Messenger: Ok so, should I get rid of [the chalice] or should I get rid of-\n(369) Engineer: yeah so\n(370) Messenger: This\n(371) Engineer: Um don't get rid of the Chalice\n---\n(371) -- Reject --\x3e (368)\n"})}),"\n",(0,i.jsx)(n.p,{children:"In (368), the messenger is asking a question which proposes to get rid of the chalice, but the Engineer rejects this proposal in (371)."})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var o=t(6540);const i={},s=o.createContext(i);function a(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);