"use strict";(self.webpackChunkdda_codebook=self.webpackChunkdda_codebook||[]).push([[3410],{8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}},8732:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Discourse Relations/Expansion/restate-equal","title":"Restate-Equal","description":"Definition","source":"@site/docs/Discourse Relations/Expansion/restate-equal.mdx","sourceDirName":"Discourse Relations/Expansion","slug":"/Discourse Relations/Expansion/restate-equal","permalink":"/dda-codebook/Discourse Relations/Expansion/restate-equal","draft":false,"unlisted":false,"editUrl":"https://github.com/NSF-iSAT/dda-codebook/tree/main/docs/Discourse Relations/Expansion/restate-equal.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Restate-Equal","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Disjunction (Alternative)","permalink":"/dda-codebook/Discourse Relations/Expansion/disjunction"},"next":{"title":"index","permalink":"/dda-codebook/Distinctions/"}}');var i=t(4848),o=t(8453);const r={title:"Restate-Equal",sidebar_position:2},a=void 0,d={},c=[{value:"Definition",id:"definition",level:2},{value:"Examples",id:"examples",level:2}];function l(e){const n={code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Used when:"})," both arguments are taken to describe the same situation, but possibly from different perspectives."]}),"\n",(0,i.jsxs)(n.p,{children:["i.e. ",(0,i.jsx)(n.em,{children:"This"})," is equal to ",(0,i.jsx)(n.em,{children:"That"}),", ",(0,i.jsx)(n.em,{children:"This"})," restates ",(0,i.jsx)(n.em,{children:"That"})]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"(131) A: Click on basic.\n(132) A: Click on that.\n---\n(132) -- Restatement --\x3e (131)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Speaker A re-states their action directive."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"(22) T: Am I yelling?\n(23) T: Am I super loud?\n---\n(23) -- Restatement --\x3e (22)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Speaker T re-states their question."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"<in a collaborative board game: Forbidden Island>\n\n(459) Engineer: Ok so if you're gonna take the Lions\n(460) Pilot: Ok I'll take the Lions\n---\n(460) -- Restatement --\x3e (459)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Speaker Pilot re-states their agreement with Engineer's suggestion."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"(1) A: I think we should go to the store.\n(2) A: We should go to the store.\n---\n(2) -- Restatement --\x3e (1)\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"Speaker A re-states their suggestion."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"(33) A: Yo it works\n(34) B: It works\n---\n(34) -- Restatement --\x3e (33)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Speaker B re-states Speaker A's observation (in agreement)."})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);