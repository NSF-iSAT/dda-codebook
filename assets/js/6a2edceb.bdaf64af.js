"use strict";(self.webpackChunkdda_codebook=self.webpackChunkdda_codebook||[]).push([[7081],{458:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Dialogue Acts/Communicative Status/Self-talk/index","title":"Self Talk","description":"Definition","source":"@site/docs/Dialogue Acts/Communicative Status/Self-talk/index.mdx","sourceDirName":"Dialogue Acts/Communicative Status/Self-talk","slug":"/Dialogue Acts/Communicative Status/Self-talk/","permalink":"/dda-codebook/Dialogue Acts/Communicative Status/Self-talk/","draft":false,"unlisted":false,"editUrl":"https://github.com/NSF-iSAT/dda-codebook/tree/main/docs/Dialogue Acts/Communicative Status/Self-talk/index.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Self Talk","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Abandoned","permalink":"/dda-codebook/Dialogue Acts/Communicative Status/Abandoned/"},"next":{"title":"Stalling","permalink":"/dda-codebook/Dialogue Acts/Communicative Status/Stalling/"}}');var o=n(4848),s=n(8453);const a={title:"Self Talk",sidebar_position:1},l=void 0,d={},c=[{value:"Definition",id:"definition",level:2},{value:"Examples",id:"examples",level:2},{value:"Conventions",id:"conventions",level:2}];function r(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Used when:"}),' used when the source argument does not seem to be intended for the listener to respond to, or talking to one-self. It can be used to capture the "thinking-out-loud" actions.\nTypically these are self-pointing (source and target slash-units are the same), but this can also be used to connect multi-slash-unit self-talk, or\nin connection to a previous slash-unit that is not self-talk.']}),"\n",(0,o.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"(45) A: Wait, no.\n---\n(45) -- SelfTalk --\x3e (45)\n"})}),"\n",(0,o.jsx)(t.p,{children:"In (45), A is talking to themselves while completing a task."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"(195) Messenger: And then you need three.\n(196) Pilot: mm two three.\n---\n(196) -- SelfTalk --\x3e (195)\n"})}),"\n",(0,o.jsx)(t.p,{children:"In (196) the Pilot is counting to themselves, but prompted by the target utterance indicating how many items are needed."}),"\n",(0,o.jsx)(t.h2,{id:"conventions",children:"Conventions"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Self-talk can be used as part of indicating ",(0,o.jsx)(t.a,{href:"/dda-codebook/Conventions/readingaloud",children:"Reading Aloud"})," behaviors."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>l});var i=n(6540);const o={},s=i.createContext(o);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);